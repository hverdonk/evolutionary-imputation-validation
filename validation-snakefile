from datetime import date

today = date.today().strftime('%Y%m%d')
NEXUS = ["adh.nex", "bglobin.nex", "camelid.nex", "ENCenv.nex", "flavNS5.nex",
                "HepatitisD.nex", "HIVvif.nex", "IAV_Chen.nex", "lysin.nex",            
                "yokoyama.rh1.cds.mod.1-990.nex"]

rule all:
	input: "/home/hverdonk/empirical-results-"+today+".json"

# combine analysis results into a single text file
rule validatePRIME:
	input:
		nexus = expand("PREI/task5_realWorldData/empirical-alignments/{tester}", tester=NEXUS),
 		Atchley = expand("/home/hverdonk/PREI/task5_realWorldData/Atchley/Atchley-{tester}.PRIME.json", tester=NEXUS),
 		LCAP = expand("/home/hverdonk/PREI/task5_realWorldData/LCAP/LCAP-{tester}.PRIME.json", tester=NEXUS)
        output:
		"/home/hverdonk/validatePRIME"+today+".txt"
	shell:    
		'''
		python3 validatePRIME-snakemake.py --nexus {input.nexus} -p {input.Atchley} >> {output}
                python3 validatePRIME-snakemake.py --nexus {input.nexus} -p {input.LCAP} >> {output}
		'''
		
rule makeJSON:
        input: "/home/hverdonk/validatePRIME"+today+".txt"
        output: "/home/hverdonk/empirical-results-"+today+".json"
        run:
             toBeWritten = []
             with open('','r') as myFile:
                for l in myFile:
                    # you need a tempDict for every line of input file, all shoved into a list
                    line = l.rstrip.split(' ')
                    tempDict = {'alignment':line[0],\
                        'property':line[1],\
                        'taxon':line[2],\
                        'MG94XREV':float(line[3]),\
                        'nucleotide_GTR':float(line[4]),\
                        'N':float(line[5]),\
                        'MOST_LIKELY_MATCH':float(line[6]),\
                        'IN_SET':float(line[7]),\
                        'MEAN_PROBABILITY':float(line[8]),\
                        'MEAN_RATIO_TO_SECOND':float(line[9])
                        }
                    toBeWritten.append(tempDict)

        
             with open(output, 'w') as writeFile:
                json.dump(toBeWritten, writeFile, indent=4)

